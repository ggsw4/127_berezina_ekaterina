DoubleLinkedList|33|--size -> ++size|pushBack_pushToEmptyList_sizeEqualsOne
DoubleLinkedList|11|return dummy == dummy -> return size == 0|createDoubleLinkedList_CreateEmptyDoubleLinkedList_EmptyFalse
DoubleLinkedList|62| -> size += list.getSize()|insertListAfter_CreateTwoListsAndUnite_CheckSize
DoubleLinkedList|74| -> size += list.getSize()|insertListBefore_TryToInsertListBefore_CheckSize
DoubleLinkedList|47|node.getPrev().setPrev(node.getNext()) -> node.getPrev().setNext(node.getNext())|remove_RemoveElement_CheckValue
DoubleLinkedList|48|node.getNext().setNext(node.getPrev()) -> node.getNext().setPrev(node.getPrev())|remove_RemoveElement_CheckValue

Node|13|this.next = prev -> this.next = next|pushFront_PushFrontValuesDoubleLinkedList_CheckValues
Node|14|this.prev = next -> this.prev = prev|pushFront_PushFrontValuesDoubleLinkedList_CheckValues

DynamicArray|11|size = 1 -> size = DefaultSize|createArray_CreateEmptyArray_CheckSize
DynamicArray|21|if(newSize > 0) -> if(newSize < 0)|resize_CreateArrayAndResize_CheckSize
DynamicArray|27|newSize = size -> size = newSize|resize_CreateArrayAndResize_CheckSize
DynamicArray|30|if(index < 0 || index > size) -> if(index < 0 || index >= size)|get_GetIndexOutOfBounds2_CheckException
DynamicArray|35|if(index < 0 || index > size) -> if(index < 0 || index >= size)|set_SetIndexOutOfBounds2_CheckException
DynamicArray|40|if(index < 0 || index > size) -> if(index < 0 || index >= size)|insert_InsertIndexOutOfBounds2_CheckException
DynamicArray|15|data = new Object[capacity] -> data = new Object[size]|set_SetNumbers_CheckValues
DynamicArray|42|if(capacity < size) { -> if(capacity <= size) {|insert_InsertNumber_CheckNewValue
DynamicArray|49|data[size] = value -> data[index] = value;|insert_InsertNumber_CheckNewValue
DynamicArray|52|if(capacity < size) -> if(capacity <= size)|pushBack_PushBackNumbers_CheckValues
DynamicArray|56|data[capacity] = value; -> data[size] = value;|pushBack_PushBackNumbers_CheckValues